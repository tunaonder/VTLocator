<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <h:body>
        <!-- Do not enter tags before the composition line since they are ignored by JSF -->

        <!-- This page is constructed based on the siteTemplate -->
        <ui:composition template="template/siteTemplate.xhtml">
            <ui:define name="sidebar">
                <ul class="nav nav-tabs nav-justified">
                    <li role="presentation" class="active"><h:link outcome="buildings">Buildings</h:link></li>
                    <li role="presentation"><h:link outcome="parking">Parking</h:link></li>
                </ul>


                <h:form id="dropDownForm">
                    <ul class="dropdown" >
                        <p:selectOneMenu value="#{buildingManager.selectedBuildingName}" styleClass="dropMenu" rendered="#{buildingManager.directionPressed == false}">
                            <!--                            Display Building Location and Update the value of selected building-->
                            <p:ajax  oncomplete="displayBuilding()" update="address buildingLat buildingLong buildingImage buildingDescription" />
                            <p:ajax listener="#{buildingManager.displayBuildingLocation}" />
                            <f:selectItem itemLabel="Select Building" itemValue="" noSelectionOption="true" />
                            <f:selectItems value="#{buildingManager.buildingNames}"  />
                        </p:selectOneMenu>
                        <!--                        Get The Value Of Building Name To An Hidden Input-->
                        <h:inputHidden id="address" value="#{buildingManager.selectedBuildingName}"/>

                    </ul>
                    <!--                    Latitude and Longitude of currently selected building-->
                    <h:inputHidden id="buildingLat" value="#{buildingManager.lat}" />
                    <h:inputHidden id="buildingLong" value="#{buildingManager.lng}" />


                    <div align="center">
                        <p:commandButton id="getDirection"  value="Get Direction" 
                                         styleClass="btn btn-default btn-direction" rendered="#{buildingManager.directionPressed == false}">
                            <p:ajax listener="#{buildingManager.directionButtonPressed()}" update="dropDownForm dropDownForm:destination" />

                        </p:commandButton>
                        <ul class="dropdown" >
                            <p:selectOneMenu value="#{buildingManager.selectedStartPoint}" styleClass="dropMenu" rendered="#{buildingManager.directionPressed == true}">
                                <p:ajax listener="#{buildingManager.createStartPoint}" />
                                <p:ajax oncomplete="drawRoute()" update="startPoint startBuildingLat startBuildingLong" />
                                <f:selectItem itemLabel="Select Building" itemValue="" noSelectionOption="true" />
                                <f:selectItems value="#{buildingManager.buildingNames}"  />
                            </p:selectOneMenu>                       


                        </ul>
                        <h:inputHidden id="startBuildingLat" value="#{buildingManager.lat2}" />
                        <h:inputHidden id="startBuildingLong" value="#{buildingManager.lng2}" />
                        <h:panelGrid  rendered="#{buildingManager.directionPressed == true}" columns="2" columnClasses="building-label, login-input">




                            <h:outputLabel styleClass="outputLabel"  value="From: " />
                            <h:inputText class="form-control" id="startPoint" value="#{buildingManager.selectedStartPoint}" />

                            <h:outputLabel styleClass="outputLabel" value="To: " />
                            <h:inputText class="form-control"  id="destination" value="#{buildingManager.selectedBuildingName}"/>

                        </h:panelGrid>
                        <p:commandButton  value="Refresh" onclick="refreshMap()"
                                          styleClass="btn btn-default btn-direction"  rendered="#{buildingManager.directionPressed == true}">
                            <p:ajax listener="#{buildingManager.init()}" update="dropDownForm"/>
                            
                        </p:commandButton>

                    </div>


                    <ul class="buildingInfo">
                        <p:inputTextarea id="buildingDescription" rows="8" cols="31" styleClass="buildingDescription" 
                                         value="#{buildingManager.description}"/>

                        <h:graphicImage id="buildingImage" url="#{buildingManager.imageUrl}" styleClass="buildingImage"/>

                    </ul>

                </h:form>


                <script type="text/javascript">


                    var currentMarker = null;
                    var startPointMarker = null;

                    //Displays location of selected building
                    function displayBuilding() {
                        //Only one marker will be displayed at a time
                        if (currentMarker !== null) {
                            currentMarker.setMap(null);
                            currentMarker = null;
                        }

                        //Create Marker
                        currentMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(document.getElementById("dropDownForm:buildingLat").value,
                                    document.getElementById("dropDownForm:buildingLong").value)
                        });

                        //Add marker to the Map
                        PF('map').addOverlay(currentMarker);


                    }

                    //Add starting point and draw route to destination
                    function drawRoute() {
                        if (startPointMarker !== null) {
                            startPointMarker.setMap(null);
                            startPointMarker = null;
                        }

                        //Create Marker
                        startPointMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(document.getElementById("dropDownForm:startBuildingLat").value,
                                    document.getElementById("dropDownForm:startBuildingLong").value)
                        });
                        startPointMarker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');

                        //Add marker to the Map
                        PF('map').addOverlay(startPointMarker);

                    }
                    
                    //Clear All Data On The Map
                    function refreshMap() {
                        currentMarker.setMap(null);
                        currentMarker = null;
                        startPointMarker.setMap(null);
                        startPointMarker = null;
                    }



                </script>


            </ui:define>
            <ui:define  name="mainPanel" >
                <p:growl id="messages" showDetail="true" />
                <h:form class="buildingMapPanel" style="width: 1000px;height:100%">

                    <p:gmap id="gmap" center="#{buildingManager.vtLat}, #{buildingManager.vtLong}" zoom="16" type="HYBRID"
                            style="width:100%;height:100%" widgetVar="map" model="#{buildingManager.mapModel}"/>


                </h:form>





            </ui:define>
        </ui:composition>
        <!-- Do not enter tags after the composition line since they are ignored by JSF -->
    </h:body>

</html>
